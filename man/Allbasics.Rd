% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Allbasics.R
\name{Allbasics}
\alias{Allbasics}
\title{Perform all basic measurements by frame}
\usage{
Allbasics(
  dado,
  dadoz = NULL,
  Xaxi = "x_cm",
  Yaxi = "y_cm",
  Zaxi = NA,
  time = NA,
  frames = NA,
  fps = 30,
  id_col = NULL,
  id = 1,
  Zones = NA,
  n.zonesd2,
  n.zonesd3 = 0,
  faceZ = 0,
  maxX = NA,
  minX = NA,
  maxY = NA,
  minY = NA,
  maxZ = NA,
  minZ = NA,
  npts = 4,
  deg = T,
  Circ_Arena = F,
  threshold = 5,
  Dist.reg = NA,
  reg = "NOT"
)
}
\arguments{
\item{dado}{A Data Frame containing tracking information, including X, Y and, optionally, Z coordinates.}

\item{dadoz}{A second data frame that contains the z observations and other identifiers.}

\item{Xaxi}{Column name in the dado data frame that includes the X coordinates .}

\item{Yaxi}{Column name in the dado data frame that includes the Y coordinates.}

\item{Zaxi}{Column name in dadoz, or a vector of the type double  containing the z observations.}

\item{time}{The column name in dados representing the time stamp in integers.}

\item{frames}{Column name in dados representing the frame number or time stamp.}

\item{fps}{The frame rate or another value to convert the time marker into a desired one (the value of time will be divided by this).}

\item{id_col}{Column name in dados that contain the unique subject identifier.}

\item{id}{Identifier of the subject.}

\item{Zones}{A data frame crated by \link[CartesianBehaviour]{Zones_int} containing the zones of interest. NA by  default to create the zones within the analysis.}

\item{n.zonesd2}{Number of zones for 2D analysis.}

\item{n.zonesd3}{Number of zones for 3D analysis.}

\item{faceZ}{The complementary dimension to Z, which will be used to draw the zones. Input 1 for x, 2 for y.}

\item{maxX}{The maximum coordinate in the X-axis defining the arena.}

\item{minX}{The minimum coordinate in the X-axis defining the arena.}

\item{maxY}{The maximum coordinate in the Y-axis defining the arena.}

\item{minY}{The minimum coordinate in the Y-axis defining the arena.}

\item{maxZ}{If considered, the maximum coordinate in the Z-axis defining the arena}

\item{minZ}{If considered, the minimum coordinate in the Z-axis defining the arena}

\item{npts}{Number of vertices that define the polygon representing the zone of interest.}

\item{deg}{Convert into degrees. If FALSE will generate the angles in radians.}

\item{Circ_Arena}{A logical indicating whether do draw a circular boundary to position the point . FALSE by default.}

\item{threshold}{A defined speed to be tested. Measure of speed depends on the input measure of time and distances in XYZ coordinates.}

\item{Dist.reg}{Logical, if TRUE will add the distance to a point of interest in the data frame.}

\item{reg}{A data frame with the x,y (and optionally z) axis. "NOT" by default to pin the point/line/plane manually in the plot tab.}
}
\value{
A list containing the data frames witch the subject was inside the zone of interest and all to perform all the 1 subject measures of this package.
}
\description{
Include all analysis by-frame necessary to calculate the means and by-time measures for one sample.
}
\examples{
#Creating an trajectory using the function from the package trajr
if("trajr" \%in\% rownames(installed.packages()) == FALSE){
install.packages("trajr")}else{library(trajr)
}
Traj <- TrajGenerate(10000, random = TRUE, stepLength = .01,
                     angularErrorSd = .8, fps = 30)

#Create the zones of interest
#Can be manually drawn but setting Zones = NA,
#but in this case is made by code directly
Z1 <- data.frame(x = c(-12,0,0,-12), y = c(10,10,0,0))
Z2 <- data.frame(x = c(0,12,12,0),   y = c(10,10,0,0))
Z3 <- data.frame(x = c(0,12,12,0),   y = c(0,0,-10,-10))
Z4 <- data.frame(x = c(-12,0,0,-12), y = c(0,0,-10,-10))
ZN <- list(Z1, Z2, Z3, Z4)
Zonas <- list(ZN)
rm(Z1, Z2, Z3, Z4, ZN)

#Perform all the measures
TRAJ2D <- Allbasics(dado = Traj, Xaxi = "x", Yaxi = "y", time = "time",
                    Zones = Zonas, threshold = 3, Dist.reg = "point",
                    reg = data.frame(x = 0, y = 0))
#View(TRAJ2D)
}
